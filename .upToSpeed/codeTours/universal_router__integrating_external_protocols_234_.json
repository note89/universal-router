{"title":"Universal Router: Integrating External Protocols","id":"hKNFTnLVzFy0HIDtXljgiQULM/a9TVlylQ0/sb7qylk=","steps":[{"type":"textOnly","description":"Welcome to the tour on the Universal Router's integration with external protocols. This tour will highlight how the router facilitates trades across different token types and NFT marketplaces, showcasing its versatility in the DeFi ecosystem.","title":"","id":"2076"},{"type":"revealFiles","files":["contracts/UniversalRouter.sol"],"description":"Let's begin by examining the UniversalRouter contract, which serves as the main entry point for all interactions. The 'execute' function is the core method for processing commands.","title":"","id":"2124"},{"type":"highlight","description":"The execute function takes three parameters: commands, inputs, and deadline. It also includes a payable modifier and a checkDeadline modifier to ensure the transaction is executed within the specified timeframe.","file":"contracts/UniversalRouter.sol","highlight":[{"start":45,"end":51}],"title":"","id":"2125"},{"type":"highlight","description":"The execute function contains a loop that processes each command. It checks for length mismatches, dispatches commands, and handles execution failures.","file":"contracts/UniversalRouter.sol","highlight":[{"start":54,"end":76}],"title":"","id":"2126"},{"type":"highlight","description":"The Dispatcher contract handles the routing of different commands. Observe how it uses a nested if-statement structure to efficiently process various command types.","file":"contracts/base/Dispatcher.sol","highlight":[{"start":44,"end":209}],"title":"","id":"2078"},{"type":"highlight","description":"The Commands library defines all the command types supported by the Universal Router. This includes commands for various protocols like Uniswap, Seaport, NFTX, and others.","file":"contracts/libraries/Commands.sol","highlight":[{"start":13,"end":73}],"title":"","id":"2079"},{"type":"highlight","description":"The V3SwapRouter contract handles Uniswap V3 swaps. Note the 'v3SwapExactInput' and 'v3SwapExactOutput' functions, which facilitate token swaps on Uniswap V3.","file":"contracts/modules/uniswap/v3/V3SwapRouter.sol","highlight":[{"start":70,"end":139}],"title":"","id":"2080"},{"type":"highlight","description":"Similarly, the V2SwapRouter contract handles Uniswap V2 swaps. Observe the 'v2SwapExactInput' and 'v2SwapExactOutput' functions.","file":"contracts/modules/uniswap/v2/V2SwapRouter.sol","highlight":[{"start":47,"end":96}],"title":"","id":"2081"},{"type":"highlight","description":"The Payments module is crucial for handling token transfers across various protocols. Let's examine key functions:\n\n1. 'pay': Used to transfer ETH or ERC20 tokens to recipients. This is essential when settling trades from different protocols.\n\n2. 'sweep': Allows the router to collect and transfer all remaining tokens after a series of trades, which is useful for multi-step, cross-protocol transactions.\n\n3. 'wrapETH' and 'unwrapWETH9': Enable seamless conversion between ETH and WETH, facilitating trades between protocols that use different token standards.\n\n4. 'approveERC20': Grants spending allowances to specific protocols, enabling the router to interact with various DeFi platforms.\n\nThese functions work together to ensure smooth token flow across different protocols, making complex, multi-platform trades possible through the Universal Router.","file":"contracts/modules/Payments.sol","highlight":[{"start":28,"end":139}],"title":"","id":"2082"},{"type":"revealFiles","files":["contracts/modules/NFTImmutables.sol"],"description":"The NFTImmutables contract defines addresses for various NFT marketplaces and related services, enabling the Universal Router to interact with multiple NFT protocols:\n\n- Seaport (v1.4 and v1.5): Used for trading on OpenSea, handling various order types.\n- NFTX: Allows interaction with NFTX vaults for NFT-backed token trading.\n- LooksRare: Enables trading on the LooksRare marketplace and handling of LOOKS token rewards.\n- Foundation, X2Y2, Element: Provide access to these specific NFT marketplaces.\n- CryptoPunks: Allows interaction with the unique CryptoPunks marketplace.\n\nThese integrations allow the router to execute complex trades involving NFTs across different platforms efficiently.","title":"","id":"2083"},{"type":"textOnly","description":"We've seen how the Universal Router integrates with various protocols through modular contracts and a flexible command system. This architecture allows for easy addition of new protocols and efficient execution of complex trades across different platforms.","title":"","id":"2084"},{"type":"highlight","description":"The RoutePlanner class demonstrates how commands are constructed for the Universal Router, enabling complex multi-protocol trades. Here's how a trade involving Uniswap V3, an NFT purchase, and a token swap might be planned:\n\n1. Create a new RoutePlanner instance\n2. Add a V3 swap command to exchange ETH for USDC\n3. Add a Seaport command to purchase an NFT using USDC\n4. Add a V2 swap command to exchange remaining USDC for another token\n\nThis sequence showcases how the Universal Router can seamlessly integrate various protocols in a single transaction, demonstrating its power in facilitating complex DeFi operations.","file":"test/integration-tests/shared/planner.ts","highlight":[{"start":117,"end":152}],"title":"","id":"2085"},{"type":"textOnly","description":"This tour has highlighted how the Universal Router integrates with various external protocols, including Uniswap V2 and V3, NFT marketplaces, and other DeFi platforms. Its modular design and flexible command system allow for efficient execution of complex trades across different token types and protocols, making it a powerful tool in the DeFi ecosystem.","title":"","id":"2086"}]}